import type { DefineFunction } from '@aws-amplify/data-schema-types';
import { Brand } from './util';
import { RefType } from './RefType';
export type HandlerType = InlineSqlHandler | SqlReferenceHandler | CustomHandler | FunctionHandler;
declare const dataSymbol: unique symbol;
type AllHandlers = InlineSqlHandler | SqlReferenceHandler | CustomHandler | FunctionHandler;
export declare function getHandlerData<H extends AllHandlers>(handler: H): H[typeof dataSymbol];
declare const inlineSqlBrand = "inlineSql";
export type InlineSqlHandler = {
    [dataSymbol]: string;
} & Brand<typeof inlineSqlBrand>;
declare function inlineSql(sql: string): InlineSqlHandler;
declare const sqlReferenceBrand = "sqlReference";
export type SqlReferenceHandlerData = {
    entry: string;
    stack: string | undefined;
};
export type SqlReferenceHandler = {
    [dataSymbol]: SqlReferenceHandlerData;
} & Brand<typeof sqlReferenceBrand>;
declare function sqlReference(sqlFilePath: string): SqlReferenceHandler;
type CustomHandlerInput = {
    /**
     * The data source used by the function.
     * Can reference a model in the schema with a.ref('ModelName') or any string data source name configured in your API
     *
     * Defaults to 'NONE_DS'
     *
     */
    dataSource?: string | RefType<any>;
    /**
     * The path to the file that contains the function entry point.
     * If this is a relative path, it is computed relative to the file where this handler is defined
     */
    entry: string;
};
export type CustomHandlerData = CustomHandlerInput & {
    stack: string | undefined;
};
declare const customHandlerBrand = "customHandler";
export type CustomHandler = {
    [dataSymbol]: CustomHandlerData;
} & Brand<typeof customHandlerBrand>;
declare function custom(customHandler: CustomHandlerInput): CustomHandler;
export type FunctionHandlerData = DefineFunction | string;
declare const functionHandlerBrand = "functionHandler";
export type FunctionHandler = {
    [dataSymbol]: FunctionHandlerData;
} & Brand<typeof functionHandlerBrand>;
declare function fcn(fn: FunctionHandlerData): FunctionHandler;
export declare const handler: {
    inlineSql: typeof inlineSql;
    sqlReference: typeof sqlReference;
    custom: typeof custom;
    function: typeof fcn;
};
export {};
