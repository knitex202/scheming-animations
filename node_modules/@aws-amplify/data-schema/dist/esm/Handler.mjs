import { brand } from './util/Brand.mjs';

const dataSymbol = Symbol('Data');
function buildHandler(brandName) {
    return brand(brandName);
}
function getHandlerData(handler) {
    return handler[dataSymbol];
}
//#region handler.inlineSql
const inlineSqlBrand = 'inlineSql';
function inlineSql(sql) {
    return { [dataSymbol]: sql, ...buildHandler(inlineSqlBrand) };
}
//#endregion
//#region handler.sqlReference
const sqlReferenceBrand = 'sqlReference';
function sqlReference(sqlFilePath) {
    // used to determine caller directory in order to resolve relative path downstream
    const stack = new Error().stack;
    return {
        [dataSymbol]: { stack, entry: sqlFilePath },
        ...buildHandler(sqlReferenceBrand),
    };
}
const customHandlerBrand = 'customHandler';
function custom(customHandler) {
    // used to determine caller directory in order to resolve relative path downstream
    const stack = new Error().stack;
    return {
        [dataSymbol]: { ...customHandler, stack },
        ...buildHandler(customHandlerBrand),
    };
}
const functionHandlerBrand = 'functionHandler';
function fcn(fn) {
    return { [dataSymbol]: fn, ...buildHandler(functionHandlerBrand) };
}
//#endregion
const handler = {
    inlineSql,
    sqlReference,
    custom,
    function: fcn,
};

export { getHandlerData, handler };
//# sourceMappingURL=Handler.mjs.map
